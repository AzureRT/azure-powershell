<?xml version="1.0" encoding="UTF-8"?>
<!--
// 
// Copyright (c) Microsoft and contributors.  All rights reserved.
// 
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//   http://www.apache.org/licenses/LICENSE-2.0
// 
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// 
// See the License for the specific language governing permissions and
// limitations under the License.
// 

// Warning: This code was generated by a tool.
// 
// Changes to this file may cause incorrect behavior and will be lost if the
// code is regenerated.
-->
<Configuration>
  <ViewDefinitions>
    <View>
      <Name>Microsoft.Azure.OperationStatusResponse</Name>
      <ViewSelectedBy>
        <TypeName>Microsoft.Azure.OperationStatusResponse</TypeName>
      </ViewSelectedBy>
      <ListControl>
        <ListEntries>
          <ListEntry>
            <ListItems>
              <ListItem>
                <Label>Error</Label>
                <ScriptBlock>[Newtonsoft.Json.JsonConvert]::SerializeObject($_.Error,  [Newtonsoft.Json.Formatting]::Indented)</ScriptBlock>
              </ListItem>
              <ListItem>
                <Label>HttpStatusCode</Label>
                <PropertyName>HttpStatusCode</PropertyName>
              </ListItem>
              <ListItem>
                <Label>Id</Label>
                <PropertyName>Id</PropertyName>
              </ListItem>
              <ListItem>
                <Label>Status</Label>
                <ScriptBlock>[Newtonsoft.Json.JsonConvert]::SerializeObject($_.Status,  [Newtonsoft.Json.Formatting]::Indented)</ScriptBlock>
              </ListItem>
              <ListItem>
                <Label>RequestId</Label>
                <PropertyName>RequestId</PropertyName>
              </ListItem>
              <ListItem>
                <Label>StatusCode</Label>
                <PropertyName>StatusCode</PropertyName>
              </ListItem>
            </ListItems>
          </ListEntry>
        </ListEntries>
      </ListControl>
    </View>
    <View>
      <Name>Microsoft.WindowsAzure.Management.Compute.Models.DeploymentGetResponse</Name>
      <ViewSelectedBy>
        <TypeName>Microsoft.WindowsAzure.Management.Compute.Models.DeploymentGetResponse</TypeName>
      </ViewSelectedBy>
      <ListControl>
        <ListEntries>
          <ListEntry>
            <ListItems>
              <ListItem>
                <Label>Configuration</Label>
                <PropertyName>Configuration</PropertyName>
              </ListItem>
              <ListItem>
                <Label>CreatedTime</Label>
                <PropertyName>CreatedTime</PropertyName>
              </ListItem>
              <ListItem>
                <Label>DeploymentSlot</Label>
                <ScriptBlock>[Newtonsoft.Json.JsonConvert]::SerializeObject($_.DeploymentSlot,  [Newtonsoft.Json.Formatting]::Indented)</ScriptBlock>
              </ListItem>
              <ListItem>
                <Label>DnsSettings</Label>
                <ScriptBlock>[Newtonsoft.Json.JsonConvert]::SerializeObject($_.DnsSettings,  [Newtonsoft.Json.Formatting]::Indented)</ScriptBlock>
              </ListItem>
              <ListItem>
                <Label>ExtendedProperties.Count</Label>
                <ScriptBlock> if ($_.ExtendedProperties -eq $null) { 0 } else { $_.ExtendedProperties.Count }</ScriptBlock>
              </ListItem>
              <ListItem>
                <Label>ExtendedProperties</Label>
                <ScriptBlock> foreach ($item in $_.ExtendedProperties) { [Newtonsoft.Json.JsonConvert]::SerializeObject($item,  [Newtonsoft.Json.Formatting]::Indented) } </ScriptBlock>
              </ListItem>
              <ListItem>
                <Label>ExtensionConfiguration</Label>
                <ScriptBlock>[Newtonsoft.Json.JsonConvert]::SerializeObject($_.ExtensionConfiguration,  [Newtonsoft.Json.Formatting]::Indented)</ScriptBlock>
              </ListItem>
              <ListItem>
                <Label>Label</Label>
                <PropertyName>Label</PropertyName>
              </ListItem>
              <ListItem>
                <Label>LastModifiedTime</Label>
                <PropertyName>LastModifiedTime</PropertyName>
              </ListItem>
              <ListItem>
                <Label>LoadBalancers.Count</Label>
                <ScriptBlock> if ($_.LoadBalancers -eq $null) { 0 } else { $_.LoadBalancers.Count }</ScriptBlock>
              </ListItem>
              <ListItem>
                <Label>LoadBalancers</Label>
                <ScriptBlock> foreach ($item in $_.LoadBalancers) { [Newtonsoft.Json.JsonConvert]::SerializeObject($item,  [Newtonsoft.Json.Formatting]::Indented) } </ScriptBlock>
              </ListItem>
              <ListItem>
                <Label>Locked</Label>
                <PropertyName>Locked</PropertyName>
              </ListItem>
              <ListItem>
                <Label>Name</Label>
                <PropertyName>Name</PropertyName>
              </ListItem>
              <ListItem>
                <Label>PersistentVMDowntime</Label>
                <ScriptBlock>[Newtonsoft.Json.JsonConvert]::SerializeObject($_.PersistentVMDowntime,  [Newtonsoft.Json.Formatting]::Indented)</ScriptBlock>
              </ListItem>
              <ListItem>
                <Label>PrivateId</Label>
                <PropertyName>PrivateId</PropertyName>
              </ListItem>
              <ListItem>
                <Label>ReservedIPName</Label>
                <PropertyName>ReservedIPName</PropertyName>
              </ListItem>
              <ListItem>
                <Label>RoleInstances.Count</Label>
                <ScriptBlock> if ($_.RoleInstances -eq $null) { 0 } else { $_.RoleInstances.Count }</ScriptBlock>
              </ListItem>
              <ListItem>
                <Label>RoleInstances</Label>
                <ScriptBlock> foreach ($item in $_.RoleInstances) { [Newtonsoft.Json.JsonConvert]::SerializeObject($item,  [Newtonsoft.Json.Formatting]::Indented) } </ScriptBlock>
              </ListItem>
              <ListItem>
                <Label>Roles.Count</Label>
                <ScriptBlock> if ($_.Roles -eq $null) { 0 } else { $_.Roles.Count }</ScriptBlock>
              </ListItem>
              <ListItem>
                <Label>Roles</Label>
                <ScriptBlock> foreach ($item in $_.Roles) { [Newtonsoft.Json.JsonConvert]::SerializeObject($item,  [Newtonsoft.Json.Formatting]::Indented) } </ScriptBlock>
              </ListItem>
              <ListItem>
                <Label>RollbackAllowed</Label>
                <PropertyName>RollbackAllowed</PropertyName>
              </ListItem>
              <ListItem>
                <Label>SdkVersion</Label>
                <PropertyName>SdkVersion</PropertyName>
              </ListItem>
              <ListItem>
                <Label>Status</Label>
                <ScriptBlock>[Newtonsoft.Json.JsonConvert]::SerializeObject($_.Status,  [Newtonsoft.Json.Formatting]::Indented)</ScriptBlock>
              </ListItem>
              <ListItem>
                <Label>UpgradeDomainCount</Label>
                <PropertyName>UpgradeDomainCount</PropertyName>
              </ListItem>
              <ListItem>
                <Label>UpgradeStatus</Label>
                <ScriptBlock>[Newtonsoft.Json.JsonConvert]::SerializeObject($_.UpgradeStatus,  [Newtonsoft.Json.Formatting]::Indented)</ScriptBlock>
              </ListItem>
              <ListItem>
                <Label>Uri</Label>
                <ScriptBlock>[Newtonsoft.Json.JsonConvert]::SerializeObject($_.Uri,  [Newtonsoft.Json.Formatting]::Indented)</ScriptBlock>
              </ListItem>
              <ListItem>
                <Label>VirtualIPAddresses.Count</Label>
                <ScriptBlock> if ($_.VirtualIPAddresses -eq $null) { 0 } else { $_.VirtualIPAddresses.Count }</ScriptBlock>
              </ListItem>
              <ListItem>
                <Label>VirtualIPAddresses</Label>
                <ScriptBlock> foreach ($item in $_.VirtualIPAddresses) { [Newtonsoft.Json.JsonConvert]::SerializeObject($item,  [Newtonsoft.Json.Formatting]::Indented) } </ScriptBlock>
              </ListItem>
              <ListItem>
                <Label>VirtualNetworkName</Label>
                <PropertyName>VirtualNetworkName</PropertyName>
              </ListItem>
              <ListItem>
                <Label>RequestId</Label>
                <PropertyName>RequestId</PropertyName>
              </ListItem>
              <ListItem>
                <Label>StatusCode</Label>
                <PropertyName>StatusCode</PropertyName>
              </ListItem>
            </ListItems>
          </ListEntry>
        </ListEntries>
      </ListControl>
    </View>
    <View>
      <Name>Microsoft.WindowsAzure.Management.Compute.Models.VirtualIPAddress</Name>
      <ViewSelectedBy>
        <TypeName>Microsoft.WindowsAzure.Management.Compute.Models.VirtualIPAddress</TypeName>
      </ViewSelectedBy>
      <ListControl>
        <ListEntries>
          <ListEntry>
            <ListItems>
              <ListItem>
                <Label>VirtualIPAddress</Label>
                <ScriptBlock>[Newtonsoft.Json.JsonConvert]::SerializeObject($_,  [Newtonsoft.Json.Formatting]::Indented)</ScriptBlock>
              </ListItem>
            </ListItems>
          </ListEntry>
        </ListEntries>
      </ListControl>
    </View>
    <View>
      <Name>Microsoft.WindowsAzure.Management.Compute.Models.DeploymentEventListResponse</Name>
      <ViewSelectedBy>
        <TypeName>Microsoft.WindowsAzure.Management.Compute.Models.DeploymentEventListResponse</TypeName>
      </ViewSelectedBy>
      <ListControl>
        <ListEntries>
          <ListEntry>
            <ListItems>
              <ListItem>
                <Label>ContinuationToken</Label>
                <PropertyName>ContinuationToken</PropertyName>
              </ListItem>
              <ListItem>
                <Label>DeploymentEvents.Count</Label>
                <ScriptBlock> if ($_.DeploymentEvents -eq $null) { 0 } else { $_.DeploymentEvents.Count }</ScriptBlock>
              </ListItem>
              <ListItem>
                <Label>DeploymentEvents</Label>
                <ScriptBlock> foreach ($item in $_.DeploymentEvents) { [Newtonsoft.Json.JsonConvert]::SerializeObject($item,  [Newtonsoft.Json.Formatting]::Indented) } </ScriptBlock>
              </ListItem>
              <ListItem>
                <Label>RequestId</Label>
                <PropertyName>RequestId</PropertyName>
              </ListItem>
              <ListItem>
                <Label>StatusCode</Label>
                <PropertyName>StatusCode</PropertyName>
              </ListItem>
            </ListItems>
          </ListEntry>
        </ListEntries>
      </ListControl>
    </View>
    <View>
      <Name>Microsoft.WindowsAzure.Management.Compute.Models.RebootEvent</Name>
      <ViewSelectedBy>
        <TypeName>Microsoft.WindowsAzure.Management.Compute.Models.RebootEvent</TypeName>
      </ViewSelectedBy>
      <ListControl>
        <ListEntries>
          <ListEntry>
            <ListItems>
              <ListItem>
                <Label>RebootEvent</Label>
                <ScriptBlock>[Newtonsoft.Json.JsonConvert]::SerializeObject($_,  [Newtonsoft.Json.Formatting]::Indented)</ScriptBlock>
              </ListItem>
            </ListItems>
          </ListEntry>
        </ListEntries>
      </ListControl>
    </View>
    <View>
      <Name>Microsoft.WindowsAzure.Management.Compute.Models.HostedServiceCheckNameAvailabilityResponse</Name>
      <ViewSelectedBy>
        <TypeName>Microsoft.WindowsAzure.Management.Compute.Models.HostedServiceCheckNameAvailabilityResponse</TypeName>
      </ViewSelectedBy>
      <ListControl>
        <ListEntries>
          <ListEntry>
            <ListItems>
              <ListItem>
                <Label>IsAvailable</Label>
                <PropertyName>IsAvailable</PropertyName>
              </ListItem>
              <ListItem>
                <Label>Reason</Label>
                <PropertyName>Reason</PropertyName>
              </ListItem>
              <ListItem>
                <Label>RequestId</Label>
                <PropertyName>RequestId</PropertyName>
              </ListItem>
              <ListItem>
                <Label>StatusCode</Label>
                <PropertyName>StatusCode</PropertyName>
              </ListItem>
            </ListItems>
          </ListEntry>
        </ListEntries>
      </ListControl>
    </View>
    <View>
      <Name>Microsoft.WindowsAzure.Management.Compute.Models.HostedServiceGetResponse</Name>
      <ViewSelectedBy>
        <TypeName>Microsoft.WindowsAzure.Management.Compute.Models.HostedServiceGetResponse</TypeName>
      </ViewSelectedBy>
      <ListControl>
        <ListEntries>
          <ListEntry>
            <ListItems>
              <ListItem>
                <Label>ComputeCapabilities</Label>
                <ScriptBlock>[Newtonsoft.Json.JsonConvert]::SerializeObject($_.ComputeCapabilities,  [Newtonsoft.Json.Formatting]::Indented)</ScriptBlock>
              </ListItem>
              <ListItem>
                <Label>Properties</Label>
                <ScriptBlock>[Newtonsoft.Json.JsonConvert]::SerializeObject($_.Properties,  [Newtonsoft.Json.Formatting]::Indented)</ScriptBlock>
              </ListItem>
              <ListItem>
                <Label>ServiceName</Label>
                <PropertyName>ServiceName</PropertyName>
              </ListItem>
              <ListItem>
                <Label>Uri</Label>
                <ScriptBlock>[Newtonsoft.Json.JsonConvert]::SerializeObject($_.Uri,  [Newtonsoft.Json.Formatting]::Indented)</ScriptBlock>
              </ListItem>
              <ListItem>
                <Label>RequestId</Label>
                <PropertyName>RequestId</PropertyName>
              </ListItem>
              <ListItem>
                <Label>StatusCode</Label>
                <PropertyName>StatusCode</PropertyName>
              </ListItem>
            </ListItems>
          </ListEntry>
        </ListEntries>
      </ListControl>
    </View>
    <View>
      <Name>Microsoft.WindowsAzure.Management.Compute.Models.HostedServiceGetDetailedResponse</Name>
      <ViewSelectedBy>
        <TypeName>Microsoft.WindowsAzure.Management.Compute.Models.HostedServiceGetDetailedResponse</TypeName>
      </ViewSelectedBy>
      <ListControl>
        <ListEntries>
          <ListEntry>
            <ListItems>
              <ListItem>
                <Label>Deployments.Count</Label>
                <ScriptBlock> if ($_.Deployments -eq $null) { 0 } else { $_.Deployments.Count }</ScriptBlock>
              </ListItem>
              <ListItem>
                <Label>Deployments</Label>
                <ScriptBlock> foreach ($item in $_.Deployments) { [Newtonsoft.Json.JsonConvert]::SerializeObject($item,  [Newtonsoft.Json.Formatting]::Indented) } </ScriptBlock>
              </ListItem>
              <ListItem>
                <Label>ComputeCapabilities</Label>
                <ScriptBlock>[Newtonsoft.Json.JsonConvert]::SerializeObject($_.ComputeCapabilities,  [Newtonsoft.Json.Formatting]::Indented)</ScriptBlock>
              </ListItem>
              <ListItem>
                <Label>Properties</Label>
                <ScriptBlock>[Newtonsoft.Json.JsonConvert]::SerializeObject($_.Properties,  [Newtonsoft.Json.Formatting]::Indented)</ScriptBlock>
              </ListItem>
              <ListItem>
                <Label>ServiceName</Label>
                <PropertyName>ServiceName</PropertyName>
              </ListItem>
              <ListItem>
                <Label>Uri</Label>
                <ScriptBlock>[Newtonsoft.Json.JsonConvert]::SerializeObject($_.Uri,  [Newtonsoft.Json.Formatting]::Indented)</ScriptBlock>
              </ListItem>
              <ListItem>
                <Label>RequestId</Label>
                <PropertyName>RequestId</PropertyName>
              </ListItem>
              <ListItem>
                <Label>StatusCode</Label>
                <PropertyName>StatusCode</PropertyName>
              </ListItem>
            </ListItems>
          </ListEntry>
        </ListEntries>
      </ListControl>
    </View>
    <View>
      <Name>Microsoft.WindowsAzure.Management.Compute.Models.HostedServiceGetDetailedResponse+Deployment</Name>
      <ViewSelectedBy>
        <TypeName>Microsoft.WindowsAzure.Management.Compute.Models.HostedServiceGetDetailedResponse+Deployment</TypeName>
      </ViewSelectedBy>
      <ListControl>
        <ListEntries>
          <ListEntry>
            <ListItems>
              <ListItem>
                <Label>Deployment</Label>
                <ScriptBlock>[Newtonsoft.Json.JsonConvert]::SerializeObject($_,  [Newtonsoft.Json.Formatting]::Indented)</ScriptBlock>
              </ListItem>
            </ListItems>
          </ListEntry>
        </ListEntries>
      </ListControl>
    </View>
    <View>
      <Name>Microsoft.WindowsAzure.Management.Compute.Models.HostedServiceGetExtensionResponse</Name>
      <ViewSelectedBy>
        <TypeName>Microsoft.WindowsAzure.Management.Compute.Models.HostedServiceGetExtensionResponse</TypeName>
      </ViewSelectedBy>
      <ListControl>
        <ListEntries>
          <ListEntry>
            <ListItems>
              <ListItem>
                <Label>Id</Label>
                <PropertyName>Id</PropertyName>
              </ListItem>
              <ListItem>
                <Label>ProviderNamespace</Label>
                <PropertyName>ProviderNamespace</PropertyName>
              </ListItem>
              <ListItem>
                <Label>PublicConfiguration</Label>
                <PropertyName>PublicConfiguration</PropertyName>
              </ListItem>
              <ListItem>
                <Label>Thumbprint</Label>
                <PropertyName>Thumbprint</PropertyName>
              </ListItem>
              <ListItem>
                <Label>ThumbprintAlgorithm</Label>
                <PropertyName>ThumbprintAlgorithm</PropertyName>
              </ListItem>
              <ListItem>
                <Label>Type</Label>
                <PropertyName>Type</PropertyName>
              </ListItem>
              <ListItem>
                <Label>Version</Label>
                <PropertyName>Version</PropertyName>
              </ListItem>
              <ListItem>
                <Label>RequestId</Label>
                <PropertyName>RequestId</PropertyName>
              </ListItem>
              <ListItem>
                <Label>StatusCode</Label>
                <PropertyName>StatusCode</PropertyName>
              </ListItem>
            </ListItems>
          </ListEntry>
        </ListEntries>
      </ListControl>
    </View>
    <View>
      <Name>Microsoft.WindowsAzure.Management.Compute.Models.HostedServiceListResponse</Name>
      <ViewSelectedBy>
        <TypeName>Microsoft.WindowsAzure.Management.Compute.Models.HostedServiceListResponse</TypeName>
      </ViewSelectedBy>
      <ListControl>
        <ListEntries>
          <ListEntry>
            <ListItems>
              <ListItem>
                <Label>HostedServices.Count</Label>
                <ScriptBlock> if ($_.HostedServices -eq $null) { 0 } else { $_.HostedServices.Count }</ScriptBlock>
              </ListItem>
              <ListItem>
                <Label>HostedServices</Label>
                <ScriptBlock> foreach ($item in $_.HostedServices) { [Newtonsoft.Json.JsonConvert]::SerializeObject($item,  [Newtonsoft.Json.Formatting]::Indented) } </ScriptBlock>
              </ListItem>
              <ListItem>
                <Label>RequestId</Label>
                <PropertyName>RequestId</PropertyName>
              </ListItem>
              <ListItem>
                <Label>StatusCode</Label>
                <PropertyName>StatusCode</PropertyName>
              </ListItem>
            </ListItems>
          </ListEntry>
        </ListEntries>
      </ListControl>
    </View>
    <View>
      <Name>Microsoft.WindowsAzure.Management.Compute.Models.HostedServiceListResponse+HostedService</Name>
      <ViewSelectedBy>
        <TypeName>Microsoft.WindowsAzure.Management.Compute.Models.HostedServiceListResponse+HostedService</TypeName>
      </ViewSelectedBy>
      <ListControl>
        <ListEntries>
          <ListEntry>
            <ListItems>
              <ListItem>
                <Label>HostedService</Label>
                <ScriptBlock>[Newtonsoft.Json.JsonConvert]::SerializeObject($_,  [Newtonsoft.Json.Formatting]::Indented)</ScriptBlock>
              </ListItem>
            </ListItems>
          </ListEntry>
        </ListEntries>
      </ListControl>
    </View>
    <View>
      <Name>Microsoft.WindowsAzure.Management.Compute.Models.HostedServiceListAvailableExtensionsResponse</Name>
      <ViewSelectedBy>
        <TypeName>Microsoft.WindowsAzure.Management.Compute.Models.HostedServiceListAvailableExtensionsResponse</TypeName>
      </ViewSelectedBy>
      <ListControl>
        <ListEntries>
          <ListEntry>
            <ListItems>
              <ListItem>
                <Label>ExtensionImages.Count</Label>
                <ScriptBlock> if ($_.ExtensionImages -eq $null) { 0 } else { $_.ExtensionImages.Count }</ScriptBlock>
              </ListItem>
              <ListItem>
                <Label>ExtensionImages</Label>
                <ScriptBlock> foreach ($item in $_.ExtensionImages) { [Newtonsoft.Json.JsonConvert]::SerializeObject($item,  [Newtonsoft.Json.Formatting]::Indented) } </ScriptBlock>
              </ListItem>
              <ListItem>
                <Label>RequestId</Label>
                <PropertyName>RequestId</PropertyName>
              </ListItem>
              <ListItem>
                <Label>StatusCode</Label>
                <PropertyName>StatusCode</PropertyName>
              </ListItem>
            </ListItems>
          </ListEntry>
        </ListEntries>
      </ListControl>
    </View>
    <View>
      <Name>Microsoft.WindowsAzure.Management.Compute.Models.ExtensionImage</Name>
      <ViewSelectedBy>
        <TypeName>Microsoft.WindowsAzure.Management.Compute.Models.ExtensionImage</TypeName>
      </ViewSelectedBy>
      <ListControl>
        <ListEntries>
          <ListEntry>
            <ListItems>
              <ListItem>
                <Label>ExtensionImage</Label>
                <ScriptBlock>[Newtonsoft.Json.JsonConvert]::SerializeObject($_,  [Newtonsoft.Json.Formatting]::Indented)</ScriptBlock>
              </ListItem>
            </ListItems>
          </ListEntry>
        </ListEntries>
      </ListControl>
    </View>
    <View>
      <Name>Microsoft.WindowsAzure.Management.Compute.Models.HostedServiceListExtensionsResponse</Name>
      <ViewSelectedBy>
        <TypeName>Microsoft.WindowsAzure.Management.Compute.Models.HostedServiceListExtensionsResponse</TypeName>
      </ViewSelectedBy>
      <ListControl>
        <ListEntries>
          <ListEntry>
            <ListItems>
              <ListItem>
                <Label>Extensions.Count</Label>
                <ScriptBlock> if ($_.Extensions -eq $null) { 0 } else { $_.Extensions.Count }</ScriptBlock>
              </ListItem>
              <ListItem>
                <Label>Extensions</Label>
                <ScriptBlock> foreach ($item in $_.Extensions) { [Newtonsoft.Json.JsonConvert]::SerializeObject($item,  [Newtonsoft.Json.Formatting]::Indented) } </ScriptBlock>
              </ListItem>
              <ListItem>
                <Label>RequestId</Label>
                <PropertyName>RequestId</PropertyName>
              </ListItem>
              <ListItem>
                <Label>StatusCode</Label>
                <PropertyName>StatusCode</PropertyName>
              </ListItem>
            </ListItems>
          </ListEntry>
        </ListEntries>
      </ListControl>
    </View>
    <View>
      <Name>Microsoft.WindowsAzure.Management.Compute.Models.HostedServiceListExtensionsResponse+Extension</Name>
      <ViewSelectedBy>
        <TypeName>Microsoft.WindowsAzure.Management.Compute.Models.HostedServiceListExtensionsResponse+Extension</TypeName>
      </ViewSelectedBy>
      <ListControl>
        <ListEntries>
          <ListEntry>
            <ListItems>
              <ListItem>
                <Label>Extension</Label>
                <ScriptBlock>[Newtonsoft.Json.JsonConvert]::SerializeObject($_,  [Newtonsoft.Json.Formatting]::Indented)</ScriptBlock>
              </ListItem>
            </ListItems>
          </ListEntry>
        </ListEntries>
      </ListControl>
    </View>
    <View>
      <Name>Microsoft.WindowsAzure.Management.Compute.Models.OperatingSystemListResponse</Name>
      <ViewSelectedBy>
        <TypeName>Microsoft.WindowsAzure.Management.Compute.Models.OperatingSystemListResponse</TypeName>
      </ViewSelectedBy>
      <ListControl>
        <ListEntries>
          <ListEntry>
            <ListItems>
              <ListItem>
                <Label>OperatingSystems.Count</Label>
                <ScriptBlock> if ($_.OperatingSystems -eq $null) { 0 } else { $_.OperatingSystems.Count }</ScriptBlock>
              </ListItem>
              <ListItem>
                <Label>OperatingSystems</Label>
                <ScriptBlock> foreach ($item in $_.OperatingSystems) { [Newtonsoft.Json.JsonConvert]::SerializeObject($item,  [Newtonsoft.Json.Formatting]::Indented) } </ScriptBlock>
              </ListItem>
              <ListItem>
                <Label>RequestId</Label>
                <PropertyName>RequestId</PropertyName>
              </ListItem>
              <ListItem>
                <Label>StatusCode</Label>
                <PropertyName>StatusCode</PropertyName>
              </ListItem>
            </ListItems>
          </ListEntry>
        </ListEntries>
      </ListControl>
    </View>
    <View>
      <Name>Microsoft.WindowsAzure.Management.Compute.Models.OperatingSystemListResponse+OperatingSystem</Name>
      <ViewSelectedBy>
        <TypeName>Microsoft.WindowsAzure.Management.Compute.Models.OperatingSystemListResponse+OperatingSystem</TypeName>
      </ViewSelectedBy>
      <ListControl>
        <ListEntries>
          <ListEntry>
            <ListItems>
              <ListItem>
                <Label>OperatingSystem</Label>
                <ScriptBlock>[Newtonsoft.Json.JsonConvert]::SerializeObject($_,  [Newtonsoft.Json.Formatting]::Indented)</ScriptBlock>
              </ListItem>
            </ListItems>
          </ListEntry>
        </ListEntries>
      </ListControl>
    </View>
    <View>
      <Name>Microsoft.WindowsAzure.Management.Compute.Models.OperatingSystemListFamiliesResponse</Name>
      <ViewSelectedBy>
        <TypeName>Microsoft.WindowsAzure.Management.Compute.Models.OperatingSystemListFamiliesResponse</TypeName>
      </ViewSelectedBy>
      <ListControl>
        <ListEntries>
          <ListEntry>
            <ListItems>
              <ListItem>
                <Label>OperatingSystemFamilies.Count</Label>
                <ScriptBlock> if ($_.OperatingSystemFamilies -eq $null) { 0 } else { $_.OperatingSystemFamilies.Count }</ScriptBlock>
              </ListItem>
              <ListItem>
                <Label>OperatingSystemFamilies</Label>
                <ScriptBlock> foreach ($item in $_.OperatingSystemFamilies) { [Newtonsoft.Json.JsonConvert]::SerializeObject($item,  [Newtonsoft.Json.Formatting]::Indented) } </ScriptBlock>
              </ListItem>
              <ListItem>
                <Label>RequestId</Label>
                <PropertyName>RequestId</PropertyName>
              </ListItem>
              <ListItem>
                <Label>StatusCode</Label>
                <PropertyName>StatusCode</PropertyName>
              </ListItem>
            </ListItems>
          </ListEntry>
        </ListEntries>
      </ListControl>
    </View>
    <View>
      <Name>Microsoft.WindowsAzure.Management.Compute.Models.OperatingSystemListFamiliesResponse+OperatingSystemFamily</Name>
      <ViewSelectedBy>
        <TypeName>Microsoft.WindowsAzure.Management.Compute.Models.OperatingSystemListFamiliesResponse+OperatingSystemFamily</TypeName>
      </ViewSelectedBy>
      <ListControl>
        <ListEntries>
          <ListEntry>
            <ListItems>
              <ListItem>
                <Label>OperatingSystemFamily</Label>
                <ScriptBlock>[Newtonsoft.Json.JsonConvert]::SerializeObject($_,  [Newtonsoft.Json.Formatting]::Indented)</ScriptBlock>
              </ListItem>
            </ListItems>
          </ListEntry>
        </ListEntries>
      </ListControl>
    </View>
    <View>
      <Name>Microsoft.WindowsAzure.Management.Compute.Models.ServiceCertificateGetResponse</Name>
      <ViewSelectedBy>
        <TypeName>Microsoft.WindowsAzure.Management.Compute.Models.ServiceCertificateGetResponse</TypeName>
      </ViewSelectedBy>
      <ListControl>
        <ListEntries>
          <ListEntry>
            <ListItems>
              <ListItem>
                <Label>Data</Label>
                <ScriptBlock>[Newtonsoft.Json.JsonConvert]::SerializeObject($_.Data,  [Newtonsoft.Json.Formatting]::Indented)</ScriptBlock>
              </ListItem>
              <ListItem>
                <Label>RequestId</Label>
                <PropertyName>RequestId</PropertyName>
              </ListItem>
              <ListItem>
                <Label>StatusCode</Label>
                <PropertyName>StatusCode</PropertyName>
              </ListItem>
            </ListItems>
          </ListEntry>
        </ListEntries>
      </ListControl>
    </View>
    <View>
      <Name>Microsoft.WindowsAzure.Management.Compute.Models.ServiceCertificateListResponse</Name>
      <ViewSelectedBy>
        <TypeName>Microsoft.WindowsAzure.Management.Compute.Models.ServiceCertificateListResponse</TypeName>
      </ViewSelectedBy>
      <ListControl>
        <ListEntries>
          <ListEntry>
            <ListItems>
              <ListItem>
                <Label>Certificates.Count</Label>
                <ScriptBlock> if ($_.Certificates -eq $null) { 0 } else { $_.Certificates.Count }</ScriptBlock>
              </ListItem>
              <ListItem>
                <Label>Certificates</Label>
                <ScriptBlock> foreach ($item in $_.Certificates) { [Newtonsoft.Json.JsonConvert]::SerializeObject($item,  [Newtonsoft.Json.Formatting]::Indented) } </ScriptBlock>
              </ListItem>
              <ListItem>
                <Label>RequestId</Label>
                <PropertyName>RequestId</PropertyName>
              </ListItem>
              <ListItem>
                <Label>StatusCode</Label>
                <PropertyName>StatusCode</PropertyName>
              </ListItem>
            </ListItems>
          </ListEntry>
        </ListEntries>
      </ListControl>
    </View>
    <View>
      <Name>Microsoft.WindowsAzure.Management.Compute.Models.ServiceCertificateListResponse+Certificate</Name>
      <ViewSelectedBy>
        <TypeName>Microsoft.WindowsAzure.Management.Compute.Models.ServiceCertificateListResponse+Certificate</TypeName>
      </ViewSelectedBy>
      <ListControl>
        <ListEntries>
          <ListEntry>
            <ListItems>
              <ListItem>
                <Label>Certificate</Label>
                <ScriptBlock>[Newtonsoft.Json.JsonConvert]::SerializeObject($_,  [Newtonsoft.Json.Formatting]::Indented)</ScriptBlock>
              </ListItem>
            </ListItems>
          </ListEntry>
        </ListEntries>
      </ListControl>
    </View>
    <View>
      <Name>Microsoft.WindowsAzure.Management.Compute.Models.VirtualMachineDiskCreateResponse</Name>
      <ViewSelectedBy>
        <TypeName>Microsoft.WindowsAzure.Management.Compute.Models.VirtualMachineDiskCreateResponse</TypeName>
      </ViewSelectedBy>
      <ListControl>
        <ListEntries>
          <ListEntry>
            <ListItems>
              <ListItem>
                <Label>AffinityGroup</Label>
                <PropertyName>AffinityGroup</PropertyName>
              </ListItem>
              <ListItem>
                <Label>IOType</Label>
                <PropertyName>IOType</PropertyName>
              </ListItem>
              <ListItem>
                <Label>IsPremium</Label>
                <PropertyName>IsPremium</PropertyName>
              </ListItem>
              <ListItem>
                <Label>Label</Label>
                <PropertyName>Label</PropertyName>
              </ListItem>
              <ListItem>
                <Label>Location</Label>
                <PropertyName>Location</PropertyName>
              </ListItem>
              <ListItem>
                <Label>LogicalSizeInGB</Label>
                <PropertyName>LogicalSizeInGB</PropertyName>
              </ListItem>
              <ListItem>
                <Label>MediaLinkUri</Label>
                <ScriptBlock>[Newtonsoft.Json.JsonConvert]::SerializeObject($_.MediaLinkUri,  [Newtonsoft.Json.Formatting]::Indented)</ScriptBlock>
              </ListItem>
              <ListItem>
                <Label>Name</Label>
                <PropertyName>Name</PropertyName>
              </ListItem>
              <ListItem>
                <Label>OperatingSystem</Label>
                <PropertyName>OperatingSystem</PropertyName>
              </ListItem>
              <ListItem>
                <Label>SourceImageName</Label>
                <PropertyName>SourceImageName</PropertyName>
              </ListItem>
              <ListItem>
                <Label>UsageDetails</Label>
                <ScriptBlock>[Newtonsoft.Json.JsonConvert]::SerializeObject($_.UsageDetails,  [Newtonsoft.Json.Formatting]::Indented)</ScriptBlock>
              </ListItem>
              <ListItem>
                <Label>RequestId</Label>
                <PropertyName>RequestId</PropertyName>
              </ListItem>
              <ListItem>
                <Label>StatusCode</Label>
                <PropertyName>StatusCode</PropertyName>
              </ListItem>
            </ListItems>
          </ListEntry>
        </ListEntries>
      </ListControl>
    </View>
    <View>
      <Name>Microsoft.WindowsAzure.Management.Compute.Models.VirtualMachineDataDiskGetResponse</Name>
      <ViewSelectedBy>
        <TypeName>Microsoft.WindowsAzure.Management.Compute.Models.VirtualMachineDataDiskGetResponse</TypeName>
      </ViewSelectedBy>
      <ListControl>
        <ListEntries>
          <ListEntry>
            <ListItems>
              <ListItem>
                <Label>HostCaching</Label>
                <PropertyName>HostCaching</PropertyName>
              </ListItem>
              <ListItem>
                <Label>IOType</Label>
                <PropertyName>IOType</PropertyName>
              </ListItem>
              <ListItem>
                <Label>Label</Label>
                <PropertyName>Label</PropertyName>
              </ListItem>
              <ListItem>
                <Label>LogicalDiskSizeInGB</Label>
                <PropertyName>LogicalDiskSizeInGB</PropertyName>
              </ListItem>
              <ListItem>
                <Label>LogicalUnitNumber</Label>
                <PropertyName>LogicalUnitNumber</PropertyName>
              </ListItem>
              <ListItem>
                <Label>MediaLinkUri</Label>
                <ScriptBlock>[Newtonsoft.Json.JsonConvert]::SerializeObject($_.MediaLinkUri,  [Newtonsoft.Json.Formatting]::Indented)</ScriptBlock>
              </ListItem>
              <ListItem>
                <Label>Name</Label>
                <PropertyName>Name</PropertyName>
              </ListItem>
              <ListItem>
                <Label>RequestId</Label>
                <PropertyName>RequestId</PropertyName>
              </ListItem>
              <ListItem>
                <Label>StatusCode</Label>
                <PropertyName>StatusCode</PropertyName>
              </ListItem>
            </ListItems>
          </ListEntry>
        </ListEntries>
      </ListControl>
    </View>
    <View>
      <Name>Microsoft.WindowsAzure.Management.Compute.Models.VirtualMachineDiskGetResponse</Name>
      <ViewSelectedBy>
        <TypeName>Microsoft.WindowsAzure.Management.Compute.Models.VirtualMachineDiskGetResponse</TypeName>
      </ViewSelectedBy>
      <ListControl>
        <ListEntries>
          <ListEntry>
            <ListItems>
              <ListItem>
                <Label>AffinityGroup</Label>
                <PropertyName>AffinityGroup</PropertyName>
              </ListItem>
              <ListItem>
                <Label>IOType</Label>
                <PropertyName>IOType</PropertyName>
              </ListItem>
              <ListItem>
                <Label>IsCorrupted</Label>
                <PropertyName>IsCorrupted</PropertyName>
              </ListItem>
              <ListItem>
                <Label>IsPremium</Label>
                <PropertyName>IsPremium</PropertyName>
              </ListItem>
              <ListItem>
                <Label>Label</Label>
                <PropertyName>Label</PropertyName>
              </ListItem>
              <ListItem>
                <Label>Location</Label>
                <PropertyName>Location</PropertyName>
              </ListItem>
              <ListItem>
                <Label>LogicalSizeInGB</Label>
                <PropertyName>LogicalSizeInGB</PropertyName>
              </ListItem>
              <ListItem>
                <Label>MediaLinkUri</Label>
                <ScriptBlock>[Newtonsoft.Json.JsonConvert]::SerializeObject($_.MediaLinkUri,  [Newtonsoft.Json.Formatting]::Indented)</ScriptBlock>
              </ListItem>
              <ListItem>
                <Label>Name</Label>
                <PropertyName>Name</PropertyName>
              </ListItem>
              <ListItem>
                <Label>OperatingSystemType</Label>
                <PropertyName>OperatingSystemType</PropertyName>
              </ListItem>
              <ListItem>
                <Label>SourceImageName</Label>
                <PropertyName>SourceImageName</PropertyName>
              </ListItem>
              <ListItem>
                <Label>UsageDetails</Label>
                <ScriptBlock>[Newtonsoft.Json.JsonConvert]::SerializeObject($_.UsageDetails,  [Newtonsoft.Json.Formatting]::Indented)</ScriptBlock>
              </ListItem>
              <ListItem>
                <Label>RequestId</Label>
                <PropertyName>RequestId</PropertyName>
              </ListItem>
              <ListItem>
                <Label>StatusCode</Label>
                <PropertyName>StatusCode</PropertyName>
              </ListItem>
            </ListItems>
          </ListEntry>
        </ListEntries>
      </ListControl>
    </View>
    <View>
      <Name>Microsoft.WindowsAzure.Management.Compute.Models.VirtualMachineDiskListResponse</Name>
      <ViewSelectedBy>
        <TypeName>Microsoft.WindowsAzure.Management.Compute.Models.VirtualMachineDiskListResponse</TypeName>
      </ViewSelectedBy>
      <ListControl>
        <ListEntries>
          <ListEntry>
            <ListItems>
              <ListItem>
                <Label>Disks.Count</Label>
                <ScriptBlock> if ($_.Disks -eq $null) { 0 } else { $_.Disks.Count }</ScriptBlock>
              </ListItem>
              <ListItem>
                <Label>Disks</Label>
                <ScriptBlock> foreach ($item in $_.Disks) { [Newtonsoft.Json.JsonConvert]::SerializeObject($item,  [Newtonsoft.Json.Formatting]::Indented) } </ScriptBlock>
              </ListItem>
              <ListItem>
                <Label>RequestId</Label>
                <PropertyName>RequestId</PropertyName>
              </ListItem>
              <ListItem>
                <Label>StatusCode</Label>
                <PropertyName>StatusCode</PropertyName>
              </ListItem>
            </ListItems>
          </ListEntry>
        </ListEntries>
      </ListControl>
    </View>
    <View>
      <Name>Microsoft.WindowsAzure.Management.Compute.Models.VirtualMachineDiskListResponse+VirtualMachineDisk</Name>
      <ViewSelectedBy>
        <TypeName>Microsoft.WindowsAzure.Management.Compute.Models.VirtualMachineDiskListResponse+VirtualMachineDisk</TypeName>
      </ViewSelectedBy>
      <ListControl>
        <ListEntries>
          <ListEntry>
            <ListItems>
              <ListItem>
                <Label>VirtualMachineDisk</Label>
                <ScriptBlock>[Newtonsoft.Json.JsonConvert]::SerializeObject($_,  [Newtonsoft.Json.Formatting]::Indented)</ScriptBlock>
              </ListItem>
            </ListItems>
          </ListEntry>
        </ListEntries>
      </ListControl>
    </View>
    <View>
      <Name>Microsoft.WindowsAzure.Management.Compute.Models.VirtualMachineDiskUpdateResponse</Name>
      <ViewSelectedBy>
        <TypeName>Microsoft.WindowsAzure.Management.Compute.Models.VirtualMachineDiskUpdateResponse</TypeName>
      </ViewSelectedBy>
      <ListControl>
        <ListEntries>
          <ListEntry>
            <ListItems>
              <ListItem>
                <Label>AffinityGroup</Label>
                <PropertyName>AffinityGroup</PropertyName>
              </ListItem>
              <ListItem>
                <Label>IOType</Label>
                <PropertyName>IOType</PropertyName>
              </ListItem>
              <ListItem>
                <Label>IsPremium</Label>
                <PropertyName>IsPremium</PropertyName>
              </ListItem>
              <ListItem>
                <Label>Label</Label>
                <PropertyName>Label</PropertyName>
              </ListItem>
              <ListItem>
                <Label>Location</Label>
                <PropertyName>Location</PropertyName>
              </ListItem>
              <ListItem>
                <Label>LogicalSizeInGB</Label>
                <PropertyName>LogicalSizeInGB</PropertyName>
              </ListItem>
              <ListItem>
                <Label>MediaLinkUri</Label>
                <ScriptBlock>[Newtonsoft.Json.JsonConvert]::SerializeObject($_.MediaLinkUri,  [Newtonsoft.Json.Formatting]::Indented)</ScriptBlock>
              </ListItem>
              <ListItem>
                <Label>Name</Label>
                <PropertyName>Name</PropertyName>
              </ListItem>
              <ListItem>
                <Label>OperatingSystem</Label>
                <PropertyName>OperatingSystem</PropertyName>
              </ListItem>
              <ListItem>
                <Label>RequestId</Label>
                <PropertyName>RequestId</PropertyName>
              </ListItem>
              <ListItem>
                <Label>StatusCode</Label>
                <PropertyName>StatusCode</PropertyName>
              </ListItem>
            </ListItems>
          </ListEntry>
        </ListEntries>
      </ListControl>
    </View>
    <View>
      <Name>Microsoft.WindowsAzure.Management.Compute.Models.VirtualMachineExtensionListResponse</Name>
      <ViewSelectedBy>
        <TypeName>Microsoft.WindowsAzure.Management.Compute.Models.VirtualMachineExtensionListResponse</TypeName>
      </ViewSelectedBy>
      <ListControl>
        <ListEntries>
          <ListEntry>
            <ListItems>
              <ListItem>
                <Label>ResourceExtensions.Count</Label>
                <ScriptBlock> if ($_.ResourceExtensions -eq $null) { 0 } else { $_.ResourceExtensions.Count }</ScriptBlock>
              </ListItem>
              <ListItem>
                <Label>ResourceExtensions</Label>
                <ScriptBlock> foreach ($item in $_.ResourceExtensions) { [Newtonsoft.Json.JsonConvert]::SerializeObject($item,  [Newtonsoft.Json.Formatting]::Indented) } </ScriptBlock>
              </ListItem>
              <ListItem>
                <Label>RequestId</Label>
                <PropertyName>RequestId</PropertyName>
              </ListItem>
              <ListItem>
                <Label>StatusCode</Label>
                <PropertyName>StatusCode</PropertyName>
              </ListItem>
            </ListItems>
          </ListEntry>
        </ListEntries>
      </ListControl>
    </View>
    <View>
      <Name>Microsoft.WindowsAzure.Management.Compute.Models.VirtualMachineExtensionListResponse+ResourceExtension</Name>
      <ViewSelectedBy>
        <TypeName>Microsoft.WindowsAzure.Management.Compute.Models.VirtualMachineExtensionListResponse+ResourceExtension</TypeName>
      </ViewSelectedBy>
      <ListControl>
        <ListEntries>
          <ListEntry>
            <ListItems>
              <ListItem>
                <Label>ResourceExtension</Label>
                <ScriptBlock>[Newtonsoft.Json.JsonConvert]::SerializeObject($_,  [Newtonsoft.Json.Formatting]::Indented)</ScriptBlock>
              </ListItem>
            </ListItems>
          </ListEntry>
        </ListEntries>
      </ListControl>
    </View>
    <View>
      <Name>Microsoft.WindowsAzure.Management.Compute.Models.VirtualMachineGetResponse</Name>
      <ViewSelectedBy>
        <TypeName>Microsoft.WindowsAzure.Management.Compute.Models.VirtualMachineGetResponse</TypeName>
      </ViewSelectedBy>
      <ListControl>
        <ListEntries>
          <ListEntry>
            <ListItems>
              <ListItem>
                <Label>AvailabilitySetName</Label>
                <PropertyName>AvailabilitySetName</PropertyName>
              </ListItem>
              <ListItem>
                <Label>ConfigurationSets.Count</Label>
                <ScriptBlock> if ($_.ConfigurationSets -eq $null) { 0 } else { $_.ConfigurationSets.Count }</ScriptBlock>
              </ListItem>
              <ListItem>
                <Label>ConfigurationSets</Label>
                <ScriptBlock> foreach ($item in $_.ConfigurationSets) { [Newtonsoft.Json.JsonConvert]::SerializeObject($item,  [Newtonsoft.Json.Formatting]::Indented) } </ScriptBlock>
              </ListItem>
              <ListItem>
                <Label>DataVirtualHardDisks.Count</Label>
                <ScriptBlock> if ($_.DataVirtualHardDisks -eq $null) { 0 } else { $_.DataVirtualHardDisks.Count }</ScriptBlock>
              </ListItem>
              <ListItem>
                <Label>DataVirtualHardDisks</Label>
                <ScriptBlock> foreach ($item in $_.DataVirtualHardDisks) { [Newtonsoft.Json.JsonConvert]::SerializeObject($item,  [Newtonsoft.Json.Formatting]::Indented) } </ScriptBlock>
              </ListItem>
              <ListItem>
                <Label>DebugSettings</Label>
                <ScriptBlock>[Newtonsoft.Json.JsonConvert]::SerializeObject($_.DebugSettings,  [Newtonsoft.Json.Formatting]::Indented)</ScriptBlock>
              </ListItem>
              <ListItem>
                <Label>DefaultWinRmCertificateThumbprint</Label>
                <PropertyName>DefaultWinRmCertificateThumbprint</PropertyName>
              </ListItem>
              <ListItem>
                <Label>MigrationState</Label>
                <PropertyName>MigrationState</PropertyName>
              </ListItem>
              <ListItem>
                <Label>OsVersion</Label>
                <PropertyName>OsVersion</PropertyName>
              </ListItem>
              <ListItem>
                <Label>OSVirtualHardDisk</Label>
                <ScriptBlock>[Newtonsoft.Json.JsonConvert]::SerializeObject($_.OSVirtualHardDisk,  [Newtonsoft.Json.Formatting]::Indented)</ScriptBlock>
              </ListItem>
              <ListItem>
                <Label>RoleName</Label>
                <PropertyName>RoleName</PropertyName>
              </ListItem>
              <ListItem>
                <Label>RoleSize</Label>
                <PropertyName>RoleSize</PropertyName>
              </ListItem>
              <ListItem>
                <Label>RoleType</Label>
                <ScriptBlock>[Newtonsoft.Json.JsonConvert]::SerializeObject($_.RoleType,  [Newtonsoft.Json.Formatting]::Indented)</ScriptBlock>
              </ListItem>
              <ListItem>
                <Label>RequestId</Label>
                <PropertyName>RequestId</PropertyName>
              </ListItem>
              <ListItem>
                <Label>StatusCode</Label>
                <PropertyName>StatusCode</PropertyName>
              </ListItem>
            </ListItems>
          </ListEntry>
        </ListEntries>
      </ListControl>
    </View>
    <View>
      <Name>Microsoft.WindowsAzure.Management.Compute.Models.DataVirtualHardDisk</Name>
      <ViewSelectedBy>
        <TypeName>Microsoft.WindowsAzure.Management.Compute.Models.DataVirtualHardDisk</TypeName>
      </ViewSelectedBy>
      <ListControl>
        <ListEntries>
          <ListEntry>
            <ListItems>
              <ListItem>
                <Label>DataVirtualHardDisk</Label>
                <ScriptBlock>[Newtonsoft.Json.JsonConvert]::SerializeObject($_,  [Newtonsoft.Json.Formatting]::Indented)</ScriptBlock>
              </ListItem>
            </ListItems>
          </ListEntry>
        </ListEntries>
      </ListControl>
    </View>
    <View>
      <Name>Microsoft.WindowsAzure.Management.Compute.Models.VirtualMachineGetRemoteDesktopFileResponse</Name>
      <ViewSelectedBy>
        <TypeName>Microsoft.WindowsAzure.Management.Compute.Models.VirtualMachineGetRemoteDesktopFileResponse</TypeName>
      </ViewSelectedBy>
      <ListControl>
        <ListEntries>
          <ListEntry>
            <ListItems>
              <ListItem>
                <Label>RemoteDesktopFile</Label>
                <ScriptBlock>[Newtonsoft.Json.JsonConvert]::SerializeObject($_.RemoteDesktopFile,  [Newtonsoft.Json.Formatting]::Indented)</ScriptBlock>
              </ListItem>
              <ListItem>
                <Label>RequestId</Label>
                <PropertyName>RequestId</PropertyName>
              </ListItem>
              <ListItem>
                <Label>StatusCode</Label>
                <PropertyName>StatusCode</PropertyName>
              </ListItem>
            </ListItems>
          </ListEntry>
        </ListEntries>
      </ListControl>
    </View>
    <View>
      <Name>Microsoft.WindowsAzure.Management.Compute.Models.VirtualMachineOSImageCreateResponse</Name>
      <ViewSelectedBy>
        <TypeName>Microsoft.WindowsAzure.Management.Compute.Models.VirtualMachineOSImageCreateResponse</TypeName>
      </ViewSelectedBy>
      <ListControl>
        <ListEntries>
          <ListEntry>
            <ListItems>
              <ListItem>
                <Label>Category</Label>
                <PropertyName>Category</PropertyName>
              </ListItem>
              <ListItem>
                <Label>Description</Label>
                <PropertyName>Description</PropertyName>
              </ListItem>
              <ListItem>
                <Label>Eula</Label>
                <PropertyName>Eula</PropertyName>
              </ListItem>
              <ListItem>
                <Label>IconUri</Label>
                <PropertyName>IconUri</PropertyName>
              </ListItem>
              <ListItem>
                <Label>ImageFamily</Label>
                <PropertyName>ImageFamily</PropertyName>
              </ListItem>
              <ListItem>
                <Label>IOType</Label>
                <PropertyName>IOType</PropertyName>
              </ListItem>
              <ListItem>
                <Label>IsPremium</Label>
                <PropertyName>IsPremium</PropertyName>
              </ListItem>
              <ListItem>
                <Label>Label</Label>
                <PropertyName>Label</PropertyName>
              </ListItem>
              <ListItem>
                <Label>Language</Label>
                <PropertyName>Language</PropertyName>
              </ListItem>
              <ListItem>
                <Label>Location</Label>
                <PropertyName>Location</PropertyName>
              </ListItem>
              <ListItem>
                <Label>LogicalSizeInGB</Label>
                <ScriptBlock>[Newtonsoft.Json.JsonConvert]::SerializeObject($_.LogicalSizeInGB,  [Newtonsoft.Json.Formatting]::Indented)</ScriptBlock>
              </ListItem>
              <ListItem>
                <Label>MediaLinkUri</Label>
                <ScriptBlock>[Newtonsoft.Json.JsonConvert]::SerializeObject($_.MediaLinkUri,  [Newtonsoft.Json.Formatting]::Indented)</ScriptBlock>
              </ListItem>
              <ListItem>
                <Label>Name</Label>
                <PropertyName>Name</PropertyName>
              </ListItem>
              <ListItem>
                <Label>OperatingSystemType</Label>
                <PropertyName>OperatingSystemType</PropertyName>
              </ListItem>
              <ListItem>
                <Label>PrivacyUri</Label>
                <ScriptBlock>[Newtonsoft.Json.JsonConvert]::SerializeObject($_.PrivacyUri,  [Newtonsoft.Json.Formatting]::Indented)</ScriptBlock>
              </ListItem>
              <ListItem>
                <Label>PublishedDate</Label>
                <PropertyName>PublishedDate</PropertyName>
              </ListItem>
              <ListItem>
                <Label>PublisherName</Label>
                <PropertyName>PublisherName</PropertyName>
              </ListItem>
              <ListItem>
                <Label>RecommendedVMSize</Label>
                <PropertyName>RecommendedVMSize</PropertyName>
              </ListItem>
              <ListItem>
                <Label>ShowInGui</Label>
                <PropertyName>ShowInGui</PropertyName>
              </ListItem>
              <ListItem>
                <Label>SmallIconUri</Label>
                <PropertyName>SmallIconUri</PropertyName>
              </ListItem>
              <ListItem>
                <Label>RequestId</Label>
                <PropertyName>RequestId</PropertyName>
              </ListItem>
              <ListItem>
                <Label>StatusCode</Label>
                <PropertyName>StatusCode</PropertyName>
              </ListItem>
            </ListItems>
          </ListEntry>
        </ListEntries>
      </ListControl>
    </View>
    <View>
      <Name>Microsoft.WindowsAzure.Management.Compute.Models.VirtualMachineOSImageGetResponse</Name>
      <ViewSelectedBy>
        <TypeName>Microsoft.WindowsAzure.Management.Compute.Models.VirtualMachineOSImageGetResponse</TypeName>
      </ViewSelectedBy>
      <ListControl>
        <ListEntries>
          <ListEntry>
            <ListItems>
              <ListItem>
                <Label>AffinityGroup</Label>
                <PropertyName>AffinityGroup</PropertyName>
              </ListItem>
              <ListItem>
                <Label>Category</Label>
                <PropertyName>Category</PropertyName>
              </ListItem>
              <ListItem>
                <Label>Description</Label>
                <PropertyName>Description</PropertyName>
              </ListItem>
              <ListItem>
                <Label>Eula</Label>
                <PropertyName>Eula</PropertyName>
              </ListItem>
              <ListItem>
                <Label>IconUri</Label>
                <PropertyName>IconUri</PropertyName>
              </ListItem>
              <ListItem>
                <Label>ImageFamily</Label>
                <PropertyName>ImageFamily</PropertyName>
              </ListItem>
              <ListItem>
                <Label>IOType</Label>
                <PropertyName>IOType</PropertyName>
              </ListItem>
              <ListItem>
                <Label>IsPremium</Label>
                <PropertyName>IsPremium</PropertyName>
              </ListItem>
              <ListItem>
                <Label>Label</Label>
                <PropertyName>Label</PropertyName>
              </ListItem>
              <ListItem>
                <Label>Language</Label>
                <PropertyName>Language</PropertyName>
              </ListItem>
              <ListItem>
                <Label>Location</Label>
                <PropertyName>Location</PropertyName>
              </ListItem>
              <ListItem>
                <Label>LogicalSizeInGB</Label>
                <ScriptBlock>[Newtonsoft.Json.JsonConvert]::SerializeObject($_.LogicalSizeInGB,  [Newtonsoft.Json.Formatting]::Indented)</ScriptBlock>
              </ListItem>
              <ListItem>
                <Label>MediaLinkUri</Label>
                <ScriptBlock>[Newtonsoft.Json.JsonConvert]::SerializeObject($_.MediaLinkUri,  [Newtonsoft.Json.Formatting]::Indented)</ScriptBlock>
              </ListItem>
              <ListItem>
                <Label>Name</Label>
                <PropertyName>Name</PropertyName>
              </ListItem>
              <ListItem>
                <Label>OperatingSystemType</Label>
                <PropertyName>OperatingSystemType</PropertyName>
              </ListItem>
              <ListItem>
                <Label>PrivacyUri</Label>
                <ScriptBlock>[Newtonsoft.Json.JsonConvert]::SerializeObject($_.PrivacyUri,  [Newtonsoft.Json.Formatting]::Indented)</ScriptBlock>
              </ListItem>
              <ListItem>
                <Label>PublishedDate</Label>
                <PropertyName>PublishedDate</PropertyName>
              </ListItem>
              <ListItem>
                <Label>PublisherName</Label>
                <PropertyName>PublisherName</PropertyName>
              </ListItem>
              <ListItem>
                <Label>RecommendedVMSize</Label>
                <PropertyName>RecommendedVMSize</PropertyName>
              </ListItem>
              <ListItem>
                <Label>ShowInGui</Label>
                <PropertyName>ShowInGui</PropertyName>
              </ListItem>
              <ListItem>
                <Label>SmallIconUri</Label>
                <PropertyName>SmallIconUri</PropertyName>
              </ListItem>
              <ListItem>
                <Label>RequestId</Label>
                <PropertyName>RequestId</PropertyName>
              </ListItem>
              <ListItem>
                <Label>StatusCode</Label>
                <PropertyName>StatusCode</PropertyName>
              </ListItem>
            </ListItems>
          </ListEntry>
        </ListEntries>
      </ListControl>
    </View>
    <View>
      <Name>Microsoft.WindowsAzure.Management.Compute.Models.VirtualMachineOSImageGetDetailsResponse</Name>
      <ViewSelectedBy>
        <TypeName>Microsoft.WindowsAzure.Management.Compute.Models.VirtualMachineOSImageGetDetailsResponse</TypeName>
      </ViewSelectedBy>
      <ListControl>
        <ListEntries>
          <ListEntry>
            <ListItems>
              <ListItem>
                <Label>ComputeImageAttributes</Label>
                <ScriptBlock>[Newtonsoft.Json.JsonConvert]::SerializeObject($_.ComputeImageAttributes,  [Newtonsoft.Json.Formatting]::Indented)</ScriptBlock>
              </ListItem>
              <ListItem>
                <Label>IsCorrupted</Label>
                <PropertyName>IsCorrupted</PropertyName>
              </ListItem>
              <ListItem>
                <Label>MarketplaceImageAttributes</Label>
                <ScriptBlock>[Newtonsoft.Json.JsonConvert]::SerializeObject($_.MarketplaceImageAttributes,  [Newtonsoft.Json.Formatting]::Indented)</ScriptBlock>
              </ListItem>
              <ListItem>
                <Label>ReplicationProgress.Count</Label>
                <ScriptBlock> if ($_.ReplicationProgress -eq $null) { 0 } else { $_.ReplicationProgress.Count }</ScriptBlock>
              </ListItem>
              <ListItem>
                <Label>ReplicationProgress</Label>
                <ScriptBlock> foreach ($item in $_.ReplicationProgress) { [Newtonsoft.Json.JsonConvert]::SerializeObject($item,  [Newtonsoft.Json.Formatting]::Indented) } </ScriptBlock>
              </ListItem>
              <ListItem>
                <Label>AffinityGroup</Label>
                <PropertyName>AffinityGroup</PropertyName>
              </ListItem>
              <ListItem>
                <Label>Category</Label>
                <PropertyName>Category</PropertyName>
              </ListItem>
              <ListItem>
                <Label>Description</Label>
                <PropertyName>Description</PropertyName>
              </ListItem>
              <ListItem>
                <Label>Eula</Label>
                <PropertyName>Eula</PropertyName>
              </ListItem>
              <ListItem>
                <Label>IconUri</Label>
                <PropertyName>IconUri</PropertyName>
              </ListItem>
              <ListItem>
                <Label>ImageFamily</Label>
                <PropertyName>ImageFamily</PropertyName>
              </ListItem>
              <ListItem>
                <Label>IOType</Label>
                <PropertyName>IOType</PropertyName>
              </ListItem>
              <ListItem>
                <Label>IsPremium</Label>
                <PropertyName>IsPremium</PropertyName>
              </ListItem>
              <ListItem>
                <Label>Label</Label>
                <PropertyName>Label</PropertyName>
              </ListItem>
              <ListItem>
                <Label>Language</Label>
                <PropertyName>Language</PropertyName>
              </ListItem>
              <ListItem>
                <Label>Location</Label>
                <PropertyName>Location</PropertyName>
              </ListItem>
              <ListItem>
                <Label>LogicalSizeInGB</Label>
                <ScriptBlock>[Newtonsoft.Json.JsonConvert]::SerializeObject($_.LogicalSizeInGB,  [Newtonsoft.Json.Formatting]::Indented)</ScriptBlock>
              </ListItem>
              <ListItem>
                <Label>MediaLinkUri</Label>
                <ScriptBlock>[Newtonsoft.Json.JsonConvert]::SerializeObject($_.MediaLinkUri,  [Newtonsoft.Json.Formatting]::Indented)</ScriptBlock>
              </ListItem>
              <ListItem>
                <Label>Name</Label>
                <PropertyName>Name</PropertyName>
              </ListItem>
              <ListItem>
                <Label>OperatingSystemType</Label>
                <PropertyName>OperatingSystemType</PropertyName>
              </ListItem>
              <ListItem>
                <Label>PrivacyUri</Label>
                <ScriptBlock>[Newtonsoft.Json.JsonConvert]::SerializeObject($_.PrivacyUri,  [Newtonsoft.Json.Formatting]::Indented)</ScriptBlock>
              </ListItem>
              <ListItem>
                <Label>PublishedDate</Label>
                <PropertyName>PublishedDate</PropertyName>
              </ListItem>
              <ListItem>
                <Label>PublisherName</Label>
                <PropertyName>PublisherName</PropertyName>
              </ListItem>
              <ListItem>
                <Label>RecommendedVMSize</Label>
                <PropertyName>RecommendedVMSize</PropertyName>
              </ListItem>
              <ListItem>
                <Label>ShowInGui</Label>
                <PropertyName>ShowInGui</PropertyName>
              </ListItem>
              <ListItem>
                <Label>SmallIconUri</Label>
                <PropertyName>SmallIconUri</PropertyName>
              </ListItem>
              <ListItem>
                <Label>RequestId</Label>
                <PropertyName>RequestId</PropertyName>
              </ListItem>
              <ListItem>
                <Label>StatusCode</Label>
                <PropertyName>StatusCode</PropertyName>
              </ListItem>
            </ListItems>
          </ListEntry>
        </ListEntries>
      </ListControl>
    </View>
    <View>
      <Name>Microsoft.WindowsAzure.Management.Compute.Models.VirtualMachineOSImageGetDetailsResponse+ReplicationProgressElement</Name>
      <ViewSelectedBy>
        <TypeName>Microsoft.WindowsAzure.Management.Compute.Models.VirtualMachineOSImageGetDetailsResponse+ReplicationProgressElement</TypeName>
      </ViewSelectedBy>
      <ListControl>
        <ListEntries>
          <ListEntry>
            <ListItems>
              <ListItem>
                <Label>ReplicationProgressElement</Label>
                <ScriptBlock>[Newtonsoft.Json.JsonConvert]::SerializeObject($_,  [Newtonsoft.Json.Formatting]::Indented)</ScriptBlock>
              </ListItem>
            </ListItems>
          </ListEntry>
        </ListEntries>
      </ListControl>
    </View>
    <View>
      <Name>Microsoft.WindowsAzure.Management.Compute.Models.VirtualMachineOSImageListResponse</Name>
      <ViewSelectedBy>
        <TypeName>Microsoft.WindowsAzure.Management.Compute.Models.VirtualMachineOSImageListResponse</TypeName>
      </ViewSelectedBy>
      <ListControl>
        <ListEntries>
          <ListEntry>
            <ListItems>
              <ListItem>
                <Label>Images.Count</Label>
                <ScriptBlock> if ($_.Images -eq $null) { 0 } else { $_.Images.Count }</ScriptBlock>
              </ListItem>
              <ListItem>
                <Label>Images</Label>
                <ScriptBlock> foreach ($item in $_.Images) { [Newtonsoft.Json.JsonConvert]::SerializeObject($item,  [Newtonsoft.Json.Formatting]::Indented) } </ScriptBlock>
              </ListItem>
              <ListItem>
                <Label>RequestId</Label>
                <PropertyName>RequestId</PropertyName>
              </ListItem>
              <ListItem>
                <Label>StatusCode</Label>
                <PropertyName>StatusCode</PropertyName>
              </ListItem>
            </ListItems>
          </ListEntry>
        </ListEntries>
      </ListControl>
    </View>
    <View>
      <Name>Microsoft.WindowsAzure.Management.Compute.Models.VirtualMachineOSImageListResponse+VirtualMachineOSImage</Name>
      <ViewSelectedBy>
        <TypeName>Microsoft.WindowsAzure.Management.Compute.Models.VirtualMachineOSImageListResponse+VirtualMachineOSImage</TypeName>
      </ViewSelectedBy>
      <ListControl>
        <ListEntries>
          <ListEntry>
            <ListItems>
              <ListItem>
                <Label>VirtualMachineOSImage</Label>
                <ScriptBlock>[Newtonsoft.Json.JsonConvert]::SerializeObject($_,  [Newtonsoft.Json.Formatting]::Indented)</ScriptBlock>
              </ListItem>
            </ListItems>
          </ListEntry>
        </ListEntries>
      </ListControl>
    </View>
    <View>
      <Name>Microsoft.WindowsAzure.Management.Compute.Models.VirtualMachineOSImageReplicateResponse</Name>
      <ViewSelectedBy>
        <TypeName>Microsoft.WindowsAzure.Management.Compute.Models.VirtualMachineOSImageReplicateResponse</TypeName>
      </ViewSelectedBy>
      <ListControl>
        <ListEntries>
          <ListEntry>
            <ListItems>
              <ListItem>
                <Label>PublishedName</Label>
                <PropertyName>PublishedName</PropertyName>
              </ListItem>
              <ListItem>
                <Label>RequestId</Label>
                <PropertyName>RequestId</PropertyName>
              </ListItem>
              <ListItem>
                <Label>StatusCode</Label>
                <PropertyName>StatusCode</PropertyName>
              </ListItem>
            </ListItems>
          </ListEntry>
        </ListEntries>
      </ListControl>
    </View>
    <View>
      <Name>Microsoft.WindowsAzure.Management.Compute.Models.VirtualMachineOSImageUpdateResponse</Name>
      <ViewSelectedBy>
        <TypeName>Microsoft.WindowsAzure.Management.Compute.Models.VirtualMachineOSImageUpdateResponse</TypeName>
      </ViewSelectedBy>
      <ListControl>
        <ListEntries>
          <ListEntry>
            <ListItems>
              <ListItem>
                <Label>Category</Label>
                <PropertyName>Category</PropertyName>
              </ListItem>
              <ListItem>
                <Label>Description</Label>
                <PropertyName>Description</PropertyName>
              </ListItem>
              <ListItem>
                <Label>Eula</Label>
                <PropertyName>Eula</PropertyName>
              </ListItem>
              <ListItem>
                <Label>IconUri</Label>
                <PropertyName>IconUri</PropertyName>
              </ListItem>
              <ListItem>
                <Label>ImageFamily</Label>
                <PropertyName>ImageFamily</PropertyName>
              </ListItem>
              <ListItem>
                <Label>IOType</Label>
                <PropertyName>IOType</PropertyName>
              </ListItem>
              <ListItem>
                <Label>IsPremium</Label>
                <PropertyName>IsPremium</PropertyName>
              </ListItem>
              <ListItem>
                <Label>Label</Label>
                <PropertyName>Label</PropertyName>
              </ListItem>
              <ListItem>
                <Label>Language</Label>
                <PropertyName>Language</PropertyName>
              </ListItem>
              <ListItem>
                <Label>Location</Label>
                <PropertyName>Location</PropertyName>
              </ListItem>
              <ListItem>
                <Label>LogicalSizeInGB</Label>
                <ScriptBlock>[Newtonsoft.Json.JsonConvert]::SerializeObject($_.LogicalSizeInGB,  [Newtonsoft.Json.Formatting]::Indented)</ScriptBlock>
              </ListItem>
              <ListItem>
                <Label>MediaLinkUri</Label>
                <ScriptBlock>[Newtonsoft.Json.JsonConvert]::SerializeObject($_.MediaLinkUri,  [Newtonsoft.Json.Formatting]::Indented)</ScriptBlock>
              </ListItem>
              <ListItem>
                <Label>Name</Label>
                <PropertyName>Name</PropertyName>
              </ListItem>
              <ListItem>
                <Label>OperatingSystemType</Label>
                <PropertyName>OperatingSystemType</PropertyName>
              </ListItem>
              <ListItem>
                <Label>PrivacyUri</Label>
                <ScriptBlock>[Newtonsoft.Json.JsonConvert]::SerializeObject($_.PrivacyUri,  [Newtonsoft.Json.Formatting]::Indented)</ScriptBlock>
              </ListItem>
              <ListItem>
                <Label>PublishedDate</Label>
                <PropertyName>PublishedDate</PropertyName>
              </ListItem>
              <ListItem>
                <Label>PublisherName</Label>
                <PropertyName>PublisherName</PropertyName>
              </ListItem>
              <ListItem>
                <Label>RecommendedVMSize</Label>
                <PropertyName>RecommendedVMSize</PropertyName>
              </ListItem>
              <ListItem>
                <Label>ShowInGui</Label>
                <PropertyName>ShowInGui</PropertyName>
              </ListItem>
              <ListItem>
                <Label>SmallIconUri</Label>
                <PropertyName>SmallIconUri</PropertyName>
              </ListItem>
              <ListItem>
                <Label>RequestId</Label>
                <PropertyName>RequestId</PropertyName>
              </ListItem>
              <ListItem>
                <Label>StatusCode</Label>
                <PropertyName>StatusCode</PropertyName>
              </ListItem>
            </ListItems>
          </ListEntry>
        </ListEntries>
      </ListControl>
    </View>
    <View>
      <Name>Microsoft.WindowsAzure.Management.Compute.Models.VirtualMachineVMImageGetDetailsResponse</Name>
      <ViewSelectedBy>
        <TypeName>Microsoft.WindowsAzure.Management.Compute.Models.VirtualMachineVMImageGetDetailsResponse</TypeName>
      </ViewSelectedBy>
      <ListControl>
        <ListEntries>
          <ListEntry>
            <ListItems>
              <ListItem>
                <Label>AffinityGroup</Label>
                <PropertyName>AffinityGroup</PropertyName>
              </ListItem>
              <ListItem>
                <Label>Category</Label>
                <PropertyName>Category</PropertyName>
              </ListItem>
              <ListItem>
                <Label>ComputeImageAttributes</Label>
                <ScriptBlock>[Newtonsoft.Json.JsonConvert]::SerializeObject($_.ComputeImageAttributes,  [Newtonsoft.Json.Formatting]::Indented)</ScriptBlock>
              </ListItem>
              <ListItem>
                <Label>CreatedTime</Label>
                <PropertyName>CreatedTime</PropertyName>
              </ListItem>
              <ListItem>
                <Label>DataDiskConfigurations.Count</Label>
                <ScriptBlock> if ($_.DataDiskConfigurations -eq $null) { 0 } else { $_.DataDiskConfigurations.Count }</ScriptBlock>
              </ListItem>
              <ListItem>
                <Label>DataDiskConfigurations</Label>
                <ScriptBlock> foreach ($item in $_.DataDiskConfigurations) { [Newtonsoft.Json.JsonConvert]::SerializeObject($item,  [Newtonsoft.Json.Formatting]::Indented) } </ScriptBlock>
              </ListItem>
              <ListItem>
                <Label>DeploymentName</Label>
                <PropertyName>DeploymentName</PropertyName>
              </ListItem>
              <ListItem>
                <Label>Description</Label>
                <PropertyName>Description</PropertyName>
              </ListItem>
              <ListItem>
                <Label>Eula</Label>
                <PropertyName>Eula</PropertyName>
              </ListItem>
              <ListItem>
                <Label>IconUri</Label>
                <PropertyName>IconUri</PropertyName>
              </ListItem>
              <ListItem>
                <Label>ImageFamily</Label>
                <PropertyName>ImageFamily</PropertyName>
              </ListItem>
              <ListItem>
                <Label>IsCorrupted</Label>
                <PropertyName>IsCorrupted</PropertyName>
              </ListItem>
              <ListItem>
                <Label>IsPremium</Label>
                <PropertyName>IsPremium</PropertyName>
              </ListItem>
              <ListItem>
                <Label>Label</Label>
                <PropertyName>Label</PropertyName>
              </ListItem>
              <ListItem>
                <Label>Language</Label>
                <PropertyName>Language</PropertyName>
              </ListItem>
              <ListItem>
                <Label>Location</Label>
                <PropertyName>Location</PropertyName>
              </ListItem>
              <ListItem>
                <Label>MarketplaceImageAttributes</Label>
                <ScriptBlock>[Newtonsoft.Json.JsonConvert]::SerializeObject($_.MarketplaceImageAttributes,  [Newtonsoft.Json.Formatting]::Indented)</ScriptBlock>
              </ListItem>
              <ListItem>
                <Label>ModifiedTime</Label>
                <PropertyName>ModifiedTime</PropertyName>
              </ListItem>
              <ListItem>
                <Label>Name</Label>
                <PropertyName>Name</PropertyName>
              </ListItem>
              <ListItem>
                <Label>OSDiskConfiguration</Label>
                <ScriptBlock>[Newtonsoft.Json.JsonConvert]::SerializeObject($_.OSDiskConfiguration,  [Newtonsoft.Json.Formatting]::Indented)</ScriptBlock>
              </ListItem>
              <ListItem>
                <Label>PricingDetailLink</Label>
                <ScriptBlock>[Newtonsoft.Json.JsonConvert]::SerializeObject($_.PricingDetailLink,  [Newtonsoft.Json.Formatting]::Indented)</ScriptBlock>
              </ListItem>
              <ListItem>
                <Label>PrivacyUri</Label>
                <ScriptBlock>[Newtonsoft.Json.JsonConvert]::SerializeObject($_.PrivacyUri,  [Newtonsoft.Json.Formatting]::Indented)</ScriptBlock>
              </ListItem>
              <ListItem>
                <Label>PublishedDate</Label>
                <PropertyName>PublishedDate</PropertyName>
              </ListItem>
              <ListItem>
                <Label>PublishedName</Label>
                <PropertyName>PublishedName</PropertyName>
              </ListItem>
              <ListItem>
                <Label>PublisherName</Label>
                <PropertyName>PublisherName</PropertyName>
              </ListItem>
              <ListItem>
                <Label>RecommendedVMSize</Label>
                <PropertyName>RecommendedVMSize</PropertyName>
              </ListItem>
              <ListItem>
                <Label>ReplicationProgress.Count</Label>
                <ScriptBlock> if ($_.ReplicationProgress -eq $null) { 0 } else { $_.ReplicationProgress.Count }</ScriptBlock>
              </ListItem>
              <ListItem>
                <Label>ReplicationProgress</Label>
                <ScriptBlock> foreach ($item in $_.ReplicationProgress) { [Newtonsoft.Json.JsonConvert]::SerializeObject($item,  [Newtonsoft.Json.Formatting]::Indented) } </ScriptBlock>
              </ListItem>
              <ListItem>
                <Label>RoleName</Label>
                <PropertyName>RoleName</PropertyName>
              </ListItem>
              <ListItem>
                <Label>ServiceName</Label>
                <PropertyName>ServiceName</PropertyName>
              </ListItem>
              <ListItem>
                <Label>SharingStatus</Label>
                <PropertyName>SharingStatus</PropertyName>
              </ListItem>
              <ListItem>
                <Label>ShowInGui</Label>
                <PropertyName>ShowInGui</PropertyName>
              </ListItem>
              <ListItem>
                <Label>SmallIconUri</Label>
                <PropertyName>SmallIconUri</PropertyName>
              </ListItem>
              <ListItem>
                <Label>RequestId</Label>
                <PropertyName>RequestId</PropertyName>
              </ListItem>
              <ListItem>
                <Label>StatusCode</Label>
                <PropertyName>StatusCode</PropertyName>
              </ListItem>
            </ListItems>
          </ListEntry>
        </ListEntries>
      </ListControl>
    </View>
    <View>
      <Name>Microsoft.WindowsAzure.Management.Compute.Models.VirtualMachineVMImageListResponse+DataDiskConfiguration</Name>
      <ViewSelectedBy>
        <TypeName>Microsoft.WindowsAzure.Management.Compute.Models.VirtualMachineVMImageListResponse+DataDiskConfiguration</TypeName>
      </ViewSelectedBy>
      <ListControl>
        <ListEntries>
          <ListEntry>
            <ListItems>
              <ListItem>
                <Label>DataDiskConfiguration</Label>
                <ScriptBlock>[Newtonsoft.Json.JsonConvert]::SerializeObject($_,  [Newtonsoft.Json.Formatting]::Indented)</ScriptBlock>
              </ListItem>
            </ListItems>
          </ListEntry>
        </ListEntries>
      </ListControl>
    </View>
    <View>
      <Name>Microsoft.WindowsAzure.Management.Compute.Models.VirtualMachineVMImageListResponse</Name>
      <ViewSelectedBy>
        <TypeName>Microsoft.WindowsAzure.Management.Compute.Models.VirtualMachineVMImageListResponse</TypeName>
      </ViewSelectedBy>
      <ListControl>
        <ListEntries>
          <ListEntry>
            <ListItems>
              <ListItem>
                <Label>VMImages.Count</Label>
                <ScriptBlock> if ($_.VMImages -eq $null) { 0 } else { $_.VMImages.Count }</ScriptBlock>
              </ListItem>
              <ListItem>
                <Label>VMImages</Label>
                <ScriptBlock> foreach ($item in $_.VMImages) { [Newtonsoft.Json.JsonConvert]::SerializeObject($item,  [Newtonsoft.Json.Formatting]::Indented) } </ScriptBlock>
              </ListItem>
              <ListItem>
                <Label>RequestId</Label>
                <PropertyName>RequestId</PropertyName>
              </ListItem>
              <ListItem>
                <Label>StatusCode</Label>
                <PropertyName>StatusCode</PropertyName>
              </ListItem>
            </ListItems>
          </ListEntry>
        </ListEntries>
      </ListControl>
    </View>
    <View>
      <Name>Microsoft.WindowsAzure.Management.Compute.Models.VirtualMachineVMImageListResponse+VirtualMachineVMImage</Name>
      <ViewSelectedBy>
        <TypeName>Microsoft.WindowsAzure.Management.Compute.Models.VirtualMachineVMImageListResponse+VirtualMachineVMImage</TypeName>
      </ViewSelectedBy>
      <ListControl>
        <ListEntries>
          <ListEntry>
            <ListItems>
              <ListItem>
                <Label>VirtualMachineVMImage</Label>
                <ScriptBlock>[Newtonsoft.Json.JsonConvert]::SerializeObject($_,  [Newtonsoft.Json.Formatting]::Indented)</ScriptBlock>
              </ListItem>
            </ListItems>
          </ListEntry>
        </ListEntries>
      </ListControl>
    </View>
    <View>
      <Name>Microsoft.WindowsAzure.Management.Compute.Models.VirtualMachineVMImageReplicateResponse</Name>
      <ViewSelectedBy>
        <TypeName>Microsoft.WindowsAzure.Management.Compute.Models.VirtualMachineVMImageReplicateResponse</TypeName>
      </ViewSelectedBy>
      <ListControl>
        <ListEntries>
          <ListEntry>
            <ListItems>
              <ListItem>
                <Label>PublishedName</Label>
                <PropertyName>PublishedName</PropertyName>
              </ListItem>
              <ListItem>
                <Label>RequestId</Label>
                <PropertyName>RequestId</PropertyName>
              </ListItem>
              <ListItem>
                <Label>StatusCode</Label>
                <PropertyName>StatusCode</PropertyName>
              </ListItem>
            </ListItems>
          </ListEntry>
        </ListEntries>
      </ListControl>
    </View>
  </ViewDefinitions>
</Configuration>
